state 32 contains 24 shift/reduce conflicts
state 73 contains 25 shift/reduce conflicts
state 74 contains 1 shift/reduce conflicts
state 75 contains 18 shift/reduce conflicts
state 76 contains 24 shift/reduce conflicts
state 77 contains 1 shift/reduce conflicts
state 85 contains 18 shift/reduce conflicts
state 88 contains 2 shift/reduce conflicts
state 99 contains 2 shift/reduce conflicts
state 110 contains 24 shift/reduce conflicts
state 111 contains 2 shift/reduce conflicts
state 112 contains 2 shift/reduce conflicts
state 113 contains 2 shift/reduce conflicts
state 114 contains 2 shift/reduce conflicts
state 116 contains 2 shift/reduce conflicts
state 117 contains 2 shift/reduce conflicts
state 118 contains 2 shift/reduce conflicts
state 119 contains 2 shift/reduce conflicts
state 120 contains 2 shift/reduce conflicts
state 121 contains 2 shift/reduce conflicts
state 122 contains 2 shift/reduce conflicts
state 123 contains 2 shift/reduce conflicts
state 124 contains 2 shift/reduce conflicts
state 125 contains 2 shift/reduce conflicts
state 126 contains 18 shift/reduce conflicts
state 127 contains 18 shift/reduce conflicts
state 131 contains 1 shift/reduce conflicts
state 132 contains 3 shift/reduce conflicts
state 140 contains 2 shift/reduce conflicts
state 147 contains 2 shift/reduce conflicts
state 155 contains 1 shift/reduce conflicts
state 177 contains 25 shift/reduce conflicts
state 178 contains 1 shift/reduce conflicts
state 180 contains 2 shift/reduce conflicts
state 188 contains 2 shift/reduce conflicts
state 191 contains 18 shift/reduce conflicts
state 194 contains 1 shift/reduce conflicts
state 197 contains 2 shift/reduce conflicts
state 201 contains 2 shift/reduce conflicts
state 205 contains 1 shift/reduce conflicts
state 224 contains 3 shift/reduce conflicts
state 227 contains 2 shift/reduce conflicts
state 228 contains 18 shift/reduce conflicts
state 229 contains 18 shift/reduce conflicts
state 234 contains 1 shift/reduce conflicts
state 236 contains 2 shift/reduce conflicts
state 242 contains 2 shift/reduce conflicts
state 266 contains 2 shift/reduce conflicts
state 286 contains 2 shift/reduce conflicts
state 287 contains 2 shift/reduce conflicts
state 302 contains 2 shift/reduce conflicts
state 316 contains 2 shift/reduce conflicts
state 320 contains 2 shift/reduce conflicts
state 323 contains 2 shift/reduce conflicts
state 324 contains 2 shift/reduce conflicts


-------- Grammar --------

rule 1 Program: 
rule 2 Program: Expressions
rule 3 Expressions: Expression
rule 4 Expressions: Expressions Terminator Expression
rule 5 Expressions: Expressions Terminator
rule 6 Expressions: Terminator
rule 7 Expression: Literal
rule 8 Expression: Call
rule 9 Expression: ForOf
rule 10 Expression: Import
rule 11 Expression: Apply
rule 12 Expression: Operator
rule 13 Expression: GetLocal
rule 14 Expression: SetLocal
rule 15 Expression: Arrow
rule 16 Expression: Def
rule 17 Expression: Init
rule 18 Expression: Class
rule 19 Expression: Hash
rule 20 Expression: Mixin
rule 21 Expression: Package
rule 22 Expression: If
rule 23 Expression: While
rule 24 Expression: Unless
rule 25 Expression: Array
rule 26 Expression: "(" Expression ")"
rule 27 Expression: "(" Expression NEWLINE ")"
rule 28 Expression: "(" NEWLINE Expression NEWLINE ")"
rule 29 Terminator: NEWLINE
rule 30 Terminator: ";"
rule 31 Literal: NUMBER
rule 32 Literal: STRING
rule 33 Literal: TRUE
rule 34 Literal: FALSE
rule 35 Literal: NIL
rule 36 Call: IDENTIFIER Arguments
rule 37 Call: Expression "." IDENTIFIER Arguments
rule 38 Call: Expression "." IDENTIFIER
rule 39 Call: Expression "." IDENTIFIER IDENTIFIER "." "." "."
rule 40 Call: Expression "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
rule 41 Call: IDENTIFIER IDENTIFIER "." "." "."
rule 42 Call: IDENTIFIER "(" IDENTIFIER "." "." "." ")"
rule 43 Call: Expression "." IDENTIFIER "=" Expression
rule 44 Call: IDENTIFIER Arguments Block
rule 45 Call: Expression "." IDENTIFIER Arguments Block
rule 46 Apply: IDENTIFIER APPLY Arguments
rule 47 Apply: IDENTIFIER APPLY
rule 48 Import: IMPORT IDENTIFIER
rule 49 Import: IMPORT IDENTIFIER INTO IDENTIFIER
rule 50 Arguments: "(" ")"
rule 51 Arguments: "(" ArgList ")"
rule 52 Arguments: ArgList
rule 53 Array: "[" "]"
rule 54 Array: "[" ListArray "]"
rule 55 ListArray: Expression
rule 56 ListArray: ListArray "," Expression
rule 57 ArgList: Expression
rule 58 ArgList: ArgList "," Expression
rule 59 Arrow: SLASH ParamList ARROW Expression
rule 60 Arrow: SLASH ParamList ARROW Block
rule 61 Arrow: ARROW Block
rule 62 Arrow: ARROW Expression
rule 63 Operator: Expression "or" Expression
rule 64 Operator: Expression "and" Expression
rule 65 Operator: Expression "is" Expression
rule 66 Operator: Expression "@" Expression
rule 67 Operator: Expression "set" Expression Expression
rule 68 Operator: Expression "isnt" Expression
rule 69 Operator: "not" Expression
rule 70 Operator: Expression ">" Expression
rule 71 Operator: Expression ">=" Expression
rule 72 Operator: Expression "<" Expression
rule 73 Operator: Expression "<=" Expression
rule 74 Operator: Expression "+" Expression
rule 75 Operator: Expression "%" Expression
rule 76 Operator: Expression "-" Expression
rule 77 Operator: Expression "*" Expression
rule 78 Operator: Expression "/" Expression
rule 79 GetLocal: IDENTIFIER
rule 80 SetLocal: LET IDENTIFIER "=" Expression
rule 81 SetLocal: LET VAR IDENTIFIER "=" Expression
rule 82 SetLocal: LET "{" ParamList "}" "=" Expression
rule 83 SetLocal: LET VAR "{" ParamList "}" "=" Expression
rule 84 SetLocal: IDENTIFIER "=" Expression
rule 85 Block: "{" Expressions "}"
rule 86 Block: "{" NEWLINE Expressions "}"
rule 87 Block: "{" "}"
rule 88 Block: "{" Expressions NEWLINE "}"
rule 89 Block: "{" NEWLINE Expressions NEWLINE "}"
rule 90 Def: DEF IDENTIFIER Block
rule 91 Def: DEF IDENTIFIER "=" Expression
rule 92 Def: DEF IDENTIFIER "(" ParamList ")" "=" Expression
rule 93 Def: DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
rule 94 Def: DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression
rule 95 Def: DEF IDENTIFIER "(" ParamList ")" Block
rule 96 Def: DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block
rule 97 Def: DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block
rule 98 Def: PRIVATE DEF IDENTIFIER "=" Expression
rule 99 Def: PRIVATE DEF IDENTIFIER "(" ParamList ")" "=" Expression
rule 100 Def: PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
rule 101 Def: PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression
rule 102 Def: PRIVATE DEF IDENTIFIER "(" ParamList ")" Block
rule 103 Def: PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block
rule 104 Def: PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block
rule 105 Init: INIT "(" ParamList ")" Block
rule 106 ParamList: 
rule 107 ParamList: IDENTIFIER
rule 108 ParamList: ParamList "," IDENTIFIER
rule 109 Class: CLASS IDENTIFIER Block
rule 110 Class: CLASS IDENTIFIER EXTENDS IDENTIFIER Block
rule 111 Class: CLASS IDENTIFIER "(" Mixins ")" EXTENDS IDENTIFIER Block
rule 112 Class: CLASS IDENTIFIER "(" Mixins ")" Block
rule 113 Class: CLASS Block
rule 114 Class: CLASS EXTENDS IDENTIFIER Block
rule 115 Class: CLASS "(" Mixins ")" EXTENDS IDENTIFIER Block
rule 116 Class: CLASS "(" Mixins ")" Block
rule 117 Hash: HASH "{" NEWLINE KeyVal "}"
rule 118 Hash: HASH "{" KeyVal "}"
rule 119 Hash: HASH "{" KeyVal NEWLINE "}"
rule 120 Hash: HASH "{" NEWLINE KeyVal NEWLINE "}"
rule 121 Hash: HASH "{" "}"
rule 122 KeyVal: 
rule 123 KeyVal: IDENTIFIER ROCKET Expression
rule 124 KeyVal: KeyVal "," IDENTIFIER ROCKET Expression
rule 125 Mixin: MIXIN IDENTIFIER Block
rule 126 Mixin: MIXIN IDENTIFIER Mixins Block
rule 127 Mixins: WITH IDENTIFIER
rule 128 Mixins: Mixins "," WITH IDENTIFIER
rule 129 Package: PACKAGE Block
rule 130 Package: PACKAGE IDENTIFIER Block
rule 131 If: IF Expression Block
rule 132 If: IF Expression Block ElseIfs
rule 133 If: IF Expression Block ELSE Block
rule 134 If: Expression IF Expression
rule 135 ElseIfs: ELSEIF Expression Block
rule 136 ElseIfs: ElseIfs ELSEIF Expression Block
rule 137 ForOf: FOR "{" IDENTIFIER "," IDENTIFIER "}" OF Expression Block
rule 138 ForOf: FOR IDENTIFIER OF Expression Block
rule 139 Unless: UNLESS Expression Block
rule 140 Unless: Expression UNLESS Expression
rule 141 While: WHILE Expression Block

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (61)
    on right: 
    on left : 
  Program (62)
    on right: 
    on left : 1 2
  Expressions (63)
    on right: 2 4 5 85 86 88 89
    on left : 3 4 5 6
  Expression (64)
    on right: 3 4 26 27 28 37 38 39 40 43 45 55 56 57 58 59 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 80 81 82 83 84 91 92 93 94 98 99 100 101 123 124 131 132 133 134 135 136 137 138 139 140 141
    on left : 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
  Terminator (65)
    on right: 4 5 6
    on left : 29 30
  Literal (66)
    on right: 7
    on left : 31 32 33 34 35
  Call (67)
    on right: 8
    on left : 36 37 38 39 40 41 42 43 44 45
  ForOf (68)
    on right: 9
    on left : 137 138
  Import (69)
    on right: 10
    on left : 48 49
  Apply (70)
    on right: 11
    on left : 46 47
  Operator (71)
    on right: 12
    on left : 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
  GetLocal (72)
    on right: 13
    on left : 79
  SetLocal (73)
    on right: 14
    on left : 80 81 82 83 84
  Arrow (74)
    on right: 15
    on left : 59 60 61 62
  Def (75)
    on right: 16
    on left : 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
  Init (76)
    on right: 17
    on left : 105
  Class (77)
    on right: 18
    on left : 109 110 111 112 113 114 115 116
  Hash (78)
    on right: 19
    on left : 117 118 119 120 121
  Mixin (79)
    on right: 20
    on left : 125 126
  Package (80)
    on right: 21
    on left : 129 130
  If (81)
    on right: 22
    on left : 131 132 133 134
  While (82)
    on right: 23
    on left : 141
  Unless (83)
    on right: 24
    on left : 139 140
  Array (84)
    on right: 25
    on left : 53 54
  Arguments (85)
    on right: 36 37 44 45 46
    on left : 50 51 52
  Block (86)
    on right: 44 45 60 61 90 95 96 97 102 103 104 105 109 110 111 112 113 114 115 116 125 126 129 130 131 132 133 135 136 137 138 139 141
    on left : 85 86 87 88 89
  ArgList (87)
    on right: 51 52 58
    on left : 57 58
  ListArray (88)
    on right: 54 56
    on left : 55 56
  ParamList (89)
    on right: 59 60 82 83 92 93 95 96 99 100 102 103 105 108
    on left : 106 107 108
  Mixins (90)
    on right: 111 112 115 116 126 128
    on left : 127 128
  KeyVal (91)
    on right: 117 118 119 120 124
    on left : 122 123 124
  ElseIfs (92)
    on right: 132 136
    on left : 135 136

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  IF (2) 131 132 133 134
  ELSE (3) 133
  ELSEIF (4) 135 136
  UNLESS (5) 139 140
  WHILE (6) 141
  FOR (7) 137 138
  OF (8) 137 138
  IMPORT (9) 48 49
  INTO (10) 49
  CLASS (11) 109 110 111 112 113 114 115 116
  PRIVATE (12) 98 99 100 101 102 103 104
  HASH (13) 117 118 119 120 121
  ROCKET (14) 123 124
  WITH (15) 127 128
  MIXIN (16) 125 126
  PACKAGE (17) 129 130
  EXTENDS (18) 110 111 114 115
  DEF (19) 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
  INIT (20) 105
  ARROW (21) 59 60 61 62
  SLASH (22) 59 60
  APPLY (23) 46 47
  LET (24) 80 81 82 83
  VAR (25) 81 83
  NUMBER (26) 31
  STRING (27) 32
  SYMBOL (28) 
  TRUE (29) 33
  FALSE (30) 34
  NIL (31) 35
  IDENTIFIER (32) 36 37 38 39 40 41 42 43 44 45 46 47 48 49 79 80 81 84 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 107 108 109 110 111 112 114 115 123 124 125 126 127 128 130 137 138
  CONSTANT (33) 
  NEWLINE (34) 27 28 29 86 88 89 117 119 120
  "." (35) 37 38 39 40 41 42 43 45 93 94 96 97 100 101 103 104
  "@" (36) 66
  "set" (37) 67
  "not" (38) 69
  "*" (39) 77
  "/" (40) 78
  "+" (41) 74
  "-" (42) 76
  "%" (43) 75
  ">" (44) 70
  ">=" (45) 71
  "<" (46) 72
  "<=" (47) 73
  "is" (48) 65
  "isnt" (49) 68
  "and" (50) 64
  "or" (51) 63
  "=" (52) 43 80 81 82 83 84 91 92 93 94 98 99 100 101
  "," (53) 56 58 108 124 128 137
  "(" (54) 26 27 28 40 42 50 51 92 93 94 95 96 97 99 100 101 102 103 104 105 111 112 115 116
  ")" (55) 26 27 28 40 42 50 51 92 93 94 95 96 97 99 100 101 102 103 104 105 111 112 115 116
  ";" (56) 30
  "[" (57) 53 54
  "]" (58) 53 54
  "{" (59) 82 83 85 86 87 88 89 117 118 119 120 121 137
  "}" (60) 82 83 85 86 87 88 89 117 118 119 120 121 137

--------- State ---------

state 0


  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  NEWLINE       shift, and go to state 25
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  ";"           shift, and go to state 26
  "["           shift, and go to state 34
  $default      reduce using rule 1 (Program)

  Program       go to state 1
  Expressions   go to state 2
  Expression    go to state 3
  Terminator    go to state 4
  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23

state 1


  $end          shift, and go to state 50


state 2

   2) Program : Expressions _
   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator

  NEWLINE       shift, and go to state 25
  ";"           shift, and go to state 26
  $default      reduce using rule 2 (Program)

  Terminator    go to state 51

state 3

   3) Expressions : Expression _
  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 3 (Expressions)


state 4

   6) Expressions : Terminator _

  $default      reduce using rule 6 (Expressions)


state 5

   7) Expression : Literal _

  $default      reduce using rule 7 (Expression)


state 6

   8) Expression : Call _

  $default      reduce using rule 8 (Expression)


state 7

   9) Expression : ForOf _

  $default      reduce using rule 9 (Expression)


state 8

  10) Expression : Import _

  $default      reduce using rule 10 (Expression)


state 9

  11) Expression : Apply _

  $default      reduce using rule 11 (Expression)


state 10

  12) Expression : Operator _

  $default      reduce using rule 12 (Expression)


state 11

  13) Expression : GetLocal _

  $default      reduce using rule 13 (Expression)


state 12

  14) Expression : SetLocal _

  $default      reduce using rule 14 (Expression)


state 13

  15) Expression : Arrow _

  $default      reduce using rule 15 (Expression)


state 14

  16) Expression : Def _

  $default      reduce using rule 16 (Expression)


state 15

  17) Expression : Init _

  $default      reduce using rule 17 (Expression)


state 16

  18) Expression : Class _

  $default      reduce using rule 18 (Expression)


state 17

  19) Expression : Hash _

  $default      reduce using rule 19 (Expression)


state 18

  20) Expression : Mixin _

  $default      reduce using rule 20 (Expression)


state 19

  21) Expression : Package _

  $default      reduce using rule 21 (Expression)


state 20

  22) Expression : If _

  $default      reduce using rule 22 (Expression)


state 21

  23) Expression : While _

  $default      reduce using rule 23 (Expression)


state 22

  24) Expression : Unless _

  $default      reduce using rule 24 (Expression)


state 23

  25) Expression : Array _

  $default      reduce using rule 25 (Expression)


state 24

  26) Expression : "(" _ Expression ")"
  27) Expression : "(" _ Expression NEWLINE ")"
  28) Expression : "(" _ NEWLINE Expression NEWLINE ")"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  NEWLINE       shift, and go to state 71
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 70

state 25

  29) Terminator : NEWLINE _

  $default      reduce using rule 29 (Terminator)


state 26

  30) Terminator : ";" _

  $default      reduce using rule 30 (Terminator)


state 27

  31) Literal : NUMBER _

  $default      reduce using rule 31 (Literal)


state 28

  32) Literal : STRING _

  $default      reduce using rule 32 (Literal)


state 29

  33) Literal : TRUE _

  $default      reduce using rule 33 (Literal)


state 30

  34) Literal : FALSE _

  $default      reduce using rule 34 (Literal)


state 31

  35) Literal : NIL _

  $default      reduce using rule 35 (Literal)


state 32

  36) Call : IDENTIFIER _ Arguments
  41) Call : IDENTIFIER _ IDENTIFIER "." "." "."
  42) Call : IDENTIFIER _ "(" IDENTIFIER "." "." "." ")"
  44) Call : IDENTIFIER _ Arguments Block
  46) Apply : IDENTIFIER _ APPLY Arguments
  47) Apply : IDENTIFIER _ APPLY
  79) GetLocal : IDENTIFIER _
  84) SetLocal : IDENTIFIER _ "=" Expression

  IF            shift, and go to state 46
  IF            [reduce using rule 79 (GetLocal)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 79 (GetLocal)]
  WHILE         shift, and go to state 49
  WHILE         [reduce using rule 79 (GetLocal)]
  FOR           shift, and go to state 47
  FOR           [reduce using rule 79 (GetLocal)]
  IMPORT        shift, and go to state 33
  IMPORT        [reduce using rule 79 (GetLocal)]
  CLASS         shift, and go to state 42
  CLASS         [reduce using rule 79 (GetLocal)]
  PRIVATE       shift, and go to state 40
  PRIVATE       [reduce using rule 79 (GetLocal)]
  HASH          shift, and go to state 43
  HASH          [reduce using rule 79 (GetLocal)]
  MIXIN         shift, and go to state 44
  MIXIN         [reduce using rule 79 (GetLocal)]
  PACKAGE       shift, and go to state 45
  PACKAGE       [reduce using rule 79 (GetLocal)]
  DEF           shift, and go to state 39
  DEF           [reduce using rule 79 (GetLocal)]
  INIT          shift, and go to state 41
  INIT          [reduce using rule 79 (GetLocal)]
  ARROW         shift, and go to state 36
  ARROW         [reduce using rule 79 (GetLocal)]
  SLASH         shift, and go to state 35
  SLASH         [reduce using rule 79 (GetLocal)]
  APPLY         shift, and go to state 76
  LET           shift, and go to state 38
  LET           [reduce using rule 79 (GetLocal)]
  NUMBER        shift, and go to state 27
  NUMBER        [reduce using rule 79 (GetLocal)]
  STRING        shift, and go to state 28
  STRING        [reduce using rule 79 (GetLocal)]
  TRUE          shift, and go to state 29
  TRUE          [reduce using rule 79 (GetLocal)]
  FALSE         shift, and go to state 30
  FALSE         [reduce using rule 79 (GetLocal)]
  NIL           shift, and go to state 31
  NIL           [reduce using rule 79 (GetLocal)]
  IDENTIFIER    shift, and go to state 73
  IDENTIFIER    [reduce using rule 79 (GetLocal)]
  "not"         shift, and go to state 37
  "not"         [reduce using rule 79 (GetLocal)]
  "="           shift, and go to state 78
  "("           shift, and go to state 72
  "("           [reduce using rule 79 (GetLocal)]
  "["           shift, and go to state 34
  "["           [reduce using rule 79 (GetLocal)]
  $default      reduce using rule 79 (GetLocal)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Arguments     go to state 74
  Expression    go to state 75
  ArgList       go to state 77

state 33

  48) Import : IMPORT _ IDENTIFIER
  49) Import : IMPORT _ IDENTIFIER INTO IDENTIFIER

  IDENTIFIER    shift, and go to state 79


state 34

  53) Array : "[" _ "]"
  54) Array : "[" _ ListArray "]"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34
  "]"           shift, and go to state 81

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 80
  ListArray     go to state 82

state 35

  59) Arrow : SLASH _ ParamList ARROW Expression
  60) Arrow : SLASH _ ParamList ARROW Block

  IDENTIFIER    shift, and go to state 84
  $default      reduce using rule 106 (ParamList)

  ParamList     go to state 83

state 36

  61) Arrow : ARROW _ Block
  62) Arrow : ARROW _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34
  "{"           shift, and go to state 87

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 85
  Block         go to state 86

state 37

  69) Operator : "not" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 88

state 38

  80) SetLocal : LET _ IDENTIFIER "=" Expression
  81) SetLocal : LET _ VAR IDENTIFIER "=" Expression
  82) SetLocal : LET _ "{" ParamList "}" "=" Expression
  83) SetLocal : LET _ VAR "{" ParamList "}" "=" Expression

  VAR           shift, and go to state 90
  IDENTIFIER    shift, and go to state 89
  "{"           shift, and go to state 91


state 39

  90) Def : DEF _ IDENTIFIER Block
  91) Def : DEF _ IDENTIFIER "=" Expression
  92) Def : DEF _ IDENTIFIER "(" ParamList ")" "=" Expression
  93) Def : DEF _ IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
  94) Def : DEF _ IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression
  95) Def : DEF _ IDENTIFIER "(" ParamList ")" Block
  96) Def : DEF _ IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block
  97) Def : DEF _ IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 92


state 40

  98) Def : PRIVATE _ DEF IDENTIFIER "=" Expression
  99) Def : PRIVATE _ DEF IDENTIFIER "(" ParamList ")" "=" Expression
 100) Def : PRIVATE _ DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
 101) Def : PRIVATE _ DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression
 102) Def : PRIVATE _ DEF IDENTIFIER "(" ParamList ")" Block
 103) Def : PRIVATE _ DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block
 104) Def : PRIVATE _ DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block

  DEF           shift, and go to state 93


state 41

 105) Init : INIT _ "(" ParamList ")" Block

  "("           shift, and go to state 94


state 42

 109) Class : CLASS _ IDENTIFIER Block
 110) Class : CLASS _ IDENTIFIER EXTENDS IDENTIFIER Block
 111) Class : CLASS _ IDENTIFIER "(" Mixins ")" EXTENDS IDENTIFIER Block
 112) Class : CLASS _ IDENTIFIER "(" Mixins ")" Block
 113) Class : CLASS _ Block
 114) Class : CLASS _ EXTENDS IDENTIFIER Block
 115) Class : CLASS _ "(" Mixins ")" EXTENDS IDENTIFIER Block
 116) Class : CLASS _ "(" Mixins ")" Block

  EXTENDS       shift, and go to state 97
  IDENTIFIER    shift, and go to state 95
  "("           shift, and go to state 98
  "{"           shift, and go to state 87

  Block         go to state 96

state 43

 117) Hash : HASH _ "{" NEWLINE KeyVal "}"
 118) Hash : HASH _ "{" KeyVal "}"
 119) Hash : HASH _ "{" KeyVal NEWLINE "}"
 120) Hash : HASH _ "{" NEWLINE KeyVal NEWLINE "}"
 121) Hash : HASH _ "{" "}"

  "{"           shift, and go to state 99


state 44

 125) Mixin : MIXIN _ IDENTIFIER Block
 126) Mixin : MIXIN _ IDENTIFIER Mixins Block

  IDENTIFIER    shift, and go to state 100


state 45

 129) Package : PACKAGE _ Block
 130) Package : PACKAGE _ IDENTIFIER Block

  IDENTIFIER    shift, and go to state 102
  "{"           shift, and go to state 87

  Block         go to state 101

state 46

 131) If : IF _ Expression Block
 132) If : IF _ Expression Block ElseIfs
 133) If : IF _ Expression Block ELSE Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 103

state 47

 137) ForOf : FOR _ "{" IDENTIFIER "," IDENTIFIER "}" OF Expression Block
 138) ForOf : FOR _ IDENTIFIER OF Expression Block

  IDENTIFIER    shift, and go to state 105
  "{"           shift, and go to state 104


state 48

 139) Unless : UNLESS _ Expression Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 106

state 49

 141) While : WHILE _ Expression Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 107

state 50


  $end          shift, and go to state 108


state 51

   4) Expressions : Expressions Terminator _ Expression
   5) Expressions : Expressions Terminator _

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34
  $default      reduce using rule 5 (Expressions)

  Expression    go to state 109
  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23

state 52

  37) Call : Expression "." _ IDENTIFIER Arguments
  38) Call : Expression "." _ IDENTIFIER
  39) Call : Expression "." _ IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression "." _ IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression "." _ IDENTIFIER "=" Expression
  45) Call : Expression "." _ IDENTIFIER Arguments Block

  IDENTIFIER    shift, and go to state 110


state 53

  63) Operator : Expression "or" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 111

state 54

  64) Operator : Expression "and" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 112

state 55

  65) Operator : Expression "is" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 113

state 56

  66) Operator : Expression "@" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 114

state 57

  67) Operator : Expression "set" _ Expression Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 115

state 58

  68) Operator : Expression "isnt" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 116

state 59

  70) Operator : Expression ">" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 117

state 60

  71) Operator : Expression ">=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 118

state 61

  72) Operator : Expression "<" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 119

state 62

  73) Operator : Expression "<=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 120

state 63

  74) Operator : Expression "+" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 121

state 64

  75) Operator : Expression "%" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 122

state 65

  76) Operator : Expression "-" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 123

state 66

  77) Operator : Expression "*" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 124

state 67

  78) Operator : Expression "/" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 125

state 68

 134) If : Expression IF _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 126

state 69

 140) Unless : Expression UNLESS _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 127

state 70

  26) Expression : "(" Expression _ ")"
  27) Expression : "(" Expression _ NEWLINE ")"
  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  NEWLINE       shift, and go to state 129
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  ")"           shift, and go to state 128


state 71

  28) Expression : "(" NEWLINE _ Expression NEWLINE ")"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 130

state 72

  26) Expression : "(" _ Expression ")"
  27) Expression : "(" _ Expression NEWLINE ")"
  28) Expression : "(" _ NEWLINE Expression NEWLINE ")"
  42) Call : IDENTIFIER "(" _ IDENTIFIER "." "." "." ")"
  50) Arguments : "(" _ ")"
  51) Arguments : "(" _ ArgList ")"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 132
  NEWLINE       shift, and go to state 71
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  ")"           shift, and go to state 133
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 131
  ArgList       go to state 134

state 73

  36) Call : IDENTIFIER _ Arguments
  41) Call : IDENTIFIER _ IDENTIFIER "." "." "."
  41) Call : IDENTIFIER IDENTIFIER _ "." "." "."
  42) Call : IDENTIFIER _ "(" IDENTIFIER "." "." "." ")"
  44) Call : IDENTIFIER _ Arguments Block
  46) Apply : IDENTIFIER _ APPLY Arguments
  47) Apply : IDENTIFIER _ APPLY
  79) GetLocal : IDENTIFIER _
  84) SetLocal : IDENTIFIER _ "=" Expression

  IF            shift, and go to state 46
  IF            [reduce using rule 79 (GetLocal)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 79 (GetLocal)]
  WHILE         shift, and go to state 49
  WHILE         [reduce using rule 79 (GetLocal)]
  FOR           shift, and go to state 47
  FOR           [reduce using rule 79 (GetLocal)]
  IMPORT        shift, and go to state 33
  IMPORT        [reduce using rule 79 (GetLocal)]
  CLASS         shift, and go to state 42
  CLASS         [reduce using rule 79 (GetLocal)]
  PRIVATE       shift, and go to state 40
  PRIVATE       [reduce using rule 79 (GetLocal)]
  HASH          shift, and go to state 43
  HASH          [reduce using rule 79 (GetLocal)]
  MIXIN         shift, and go to state 44
  MIXIN         [reduce using rule 79 (GetLocal)]
  PACKAGE       shift, and go to state 45
  PACKAGE       [reduce using rule 79 (GetLocal)]
  DEF           shift, and go to state 39
  DEF           [reduce using rule 79 (GetLocal)]
  INIT          shift, and go to state 41
  INIT          [reduce using rule 79 (GetLocal)]
  ARROW         shift, and go to state 36
  ARROW         [reduce using rule 79 (GetLocal)]
  SLASH         shift, and go to state 35
  SLASH         [reduce using rule 79 (GetLocal)]
  APPLY         shift, and go to state 76
  LET           shift, and go to state 38
  LET           [reduce using rule 79 (GetLocal)]
  NUMBER        shift, and go to state 27
  NUMBER        [reduce using rule 79 (GetLocal)]
  STRING        shift, and go to state 28
  STRING        [reduce using rule 79 (GetLocal)]
  TRUE          shift, and go to state 29
  TRUE          [reduce using rule 79 (GetLocal)]
  FALSE         shift, and go to state 30
  FALSE         [reduce using rule 79 (GetLocal)]
  NIL           shift, and go to state 31
  NIL           [reduce using rule 79 (GetLocal)]
  IDENTIFIER    shift, and go to state 73
  IDENTIFIER    [reduce using rule 79 (GetLocal)]
  "."           shift, and go to state 135
  "."           [reduce using rule 79 (GetLocal)]
  "not"         shift, and go to state 37
  "not"         [reduce using rule 79 (GetLocal)]
  "="           shift, and go to state 78
  "("           shift, and go to state 72
  "("           [reduce using rule 79 (GetLocal)]
  "["           shift, and go to state 34
  "["           [reduce using rule 79 (GetLocal)]
  $default      reduce using rule 79 (GetLocal)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Arguments     go to state 74
  Expression    go to state 75
  ArgList       go to state 77

state 74

  36) Call : IDENTIFIER Arguments _
  44) Call : IDENTIFIER Arguments _ Block

  "{"           shift, and go to state 87
  "{"           [reduce using rule 36 (Call)]
  $default      reduce using rule 36 (Call)

  Block         go to state 136

state 75

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  57) ArgList : Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 57 (ArgList)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 57 (ArgList)]
  "."           shift, and go to state 52
  "."           [reduce using rule 57 (ArgList)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 57 (ArgList)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 57 (ArgList)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 57 (ArgList)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 57 (ArgList)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 57 (ArgList)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 57 (ArgList)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 57 (ArgList)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 57 (ArgList)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 57 (ArgList)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 57 (ArgList)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 57 (ArgList)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 57 (ArgList)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 57 (ArgList)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 57 (ArgList)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 57 (ArgList)]
  $default      reduce using rule 57 (ArgList)


state 76

  46) Apply : IDENTIFIER APPLY _ Arguments
  47) Apply : IDENTIFIER APPLY _

  IF            shift, and go to state 46
  IF            [reduce using rule 47 (Apply)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 47 (Apply)]
  WHILE         shift, and go to state 49
  WHILE         [reduce using rule 47 (Apply)]
  FOR           shift, and go to state 47
  FOR           [reduce using rule 47 (Apply)]
  IMPORT        shift, and go to state 33
  IMPORT        [reduce using rule 47 (Apply)]
  CLASS         shift, and go to state 42
  CLASS         [reduce using rule 47 (Apply)]
  PRIVATE       shift, and go to state 40
  PRIVATE       [reduce using rule 47 (Apply)]
  HASH          shift, and go to state 43
  HASH          [reduce using rule 47 (Apply)]
  MIXIN         shift, and go to state 44
  MIXIN         [reduce using rule 47 (Apply)]
  PACKAGE       shift, and go to state 45
  PACKAGE       [reduce using rule 47 (Apply)]
  DEF           shift, and go to state 39
  DEF           [reduce using rule 47 (Apply)]
  INIT          shift, and go to state 41
  INIT          [reduce using rule 47 (Apply)]
  ARROW         shift, and go to state 36
  ARROW         [reduce using rule 47 (Apply)]
  SLASH         shift, and go to state 35
  SLASH         [reduce using rule 47 (Apply)]
  LET           shift, and go to state 38
  LET           [reduce using rule 47 (Apply)]
  NUMBER        shift, and go to state 27
  NUMBER        [reduce using rule 47 (Apply)]
  STRING        shift, and go to state 28
  STRING        [reduce using rule 47 (Apply)]
  TRUE          shift, and go to state 29
  TRUE          [reduce using rule 47 (Apply)]
  FALSE         shift, and go to state 30
  FALSE         [reduce using rule 47 (Apply)]
  NIL           shift, and go to state 31
  NIL           [reduce using rule 47 (Apply)]
  IDENTIFIER    shift, and go to state 32
  IDENTIFIER    [reduce using rule 47 (Apply)]
  "not"         shift, and go to state 37
  "not"         [reduce using rule 47 (Apply)]
  "("           shift, and go to state 137
  "("           [reduce using rule 47 (Apply)]
  "["           shift, and go to state 34
  "["           [reduce using rule 47 (Apply)]
  $default      reduce using rule 47 (Apply)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 75
  Arguments     go to state 138
  ArgList       go to state 77

state 77

  52) Arguments : ArgList _
  58) ArgList : ArgList _ "," Expression

  ","           shift, and go to state 139
  ","           [reduce using rule 52 (Arguments)]
  $default      reduce using rule 52 (Arguments)


state 78

  84) SetLocal : IDENTIFIER "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 140

state 79

  48) Import : IMPORT IDENTIFIER _
  49) Import : IMPORT IDENTIFIER _ INTO IDENTIFIER

  INTO          shift, and go to state 141
  $default      reduce using rule 48 (Import)


state 80

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  55) ListArray : Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 55 (ListArray)


state 81

  53) Array : "[" "]" _

  $default      reduce using rule 53 (Array)


state 82

  54) Array : "[" ListArray _ "]"
  56) ListArray : ListArray _ "," Expression

  ","           shift, and go to state 143
  "]"           shift, and go to state 142


state 83

  59) Arrow : SLASH ParamList _ ARROW Expression
  60) Arrow : SLASH ParamList _ ARROW Block
 108) ParamList : ParamList _ "," IDENTIFIER

  ARROW         shift, and go to state 144
  ","           shift, and go to state 145


state 84

 107) ParamList : IDENTIFIER _

  $default      reduce using rule 107 (ParamList)


state 85

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  62) Arrow : ARROW Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 62 (Arrow)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 62 (Arrow)]
  "."           shift, and go to state 52
  "."           [reduce using rule 62 (Arrow)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 62 (Arrow)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 62 (Arrow)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 62 (Arrow)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 62 (Arrow)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 62 (Arrow)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 62 (Arrow)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 62 (Arrow)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 62 (Arrow)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 62 (Arrow)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 62 (Arrow)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 62 (Arrow)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 62 (Arrow)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 62 (Arrow)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 62 (Arrow)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 62 (Arrow)]
  $default      reduce using rule 62 (Arrow)


state 86

  61) Arrow : ARROW Block _

  $default      reduce using rule 61 (Arrow)


state 87

  85) Block : "{" _ Expressions "}"
  86) Block : "{" _ NEWLINE Expressions "}"
  87) Block : "{" _ "}"
  88) Block : "{" _ Expressions NEWLINE "}"
  89) Block : "{" _ NEWLINE Expressions NEWLINE "}"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  NEWLINE       shift, and go to state 147
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  ";"           shift, and go to state 26
  "["           shift, and go to state 34
  "}"           shift, and go to state 148

  Expression    go to state 3
  Expressions   go to state 146
  Terminator    go to state 4
  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23

state 88

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  69) Operator : "not" Expression _
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 69 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 69 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  $default      reduce using rule 69 (Operator)


state 89

  80) SetLocal : LET IDENTIFIER _ "=" Expression

  "="           shift, and go to state 149


state 90

  81) SetLocal : LET VAR _ IDENTIFIER "=" Expression
  83) SetLocal : LET VAR _ "{" ParamList "}" "=" Expression

  IDENTIFIER    shift, and go to state 150
  "{"           shift, and go to state 151


state 91

  82) SetLocal : LET "{" _ ParamList "}" "=" Expression

  IDENTIFIER    shift, and go to state 84
  $default      reduce using rule 106 (ParamList)

  ParamList     go to state 152

state 92

  90) Def : DEF IDENTIFIER _ Block
  91) Def : DEF IDENTIFIER _ "=" Expression
  92) Def : DEF IDENTIFIER _ "(" ParamList ")" "=" Expression
  93) Def : DEF IDENTIFIER _ "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
  94) Def : DEF IDENTIFIER _ "(" "." "." "." IDENTIFIER ")" "=" Expression
  95) Def : DEF IDENTIFIER _ "(" ParamList ")" Block
  96) Def : DEF IDENTIFIER _ "(" ParamList "." "." "." IDENTIFIER ")" Block
  97) Def : DEF IDENTIFIER _ "(" "." "." "." IDENTIFIER ")" Block

  "="           shift, and go to state 154
  "("           shift, and go to state 155
  "{"           shift, and go to state 87

  Block         go to state 153

state 93

  98) Def : PRIVATE DEF _ IDENTIFIER "=" Expression
  99) Def : PRIVATE DEF _ IDENTIFIER "(" ParamList ")" "=" Expression
 100) Def : PRIVATE DEF _ IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
 101) Def : PRIVATE DEF _ IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression
 102) Def : PRIVATE DEF _ IDENTIFIER "(" ParamList ")" Block
 103) Def : PRIVATE DEF _ IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block
 104) Def : PRIVATE DEF _ IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 156


state 94

 105) Init : INIT "(" _ ParamList ")" Block

  IDENTIFIER    shift, and go to state 84
  $default      reduce using rule 106 (ParamList)

  ParamList     go to state 157

state 95

 109) Class : CLASS IDENTIFIER _ Block
 110) Class : CLASS IDENTIFIER _ EXTENDS IDENTIFIER Block
 111) Class : CLASS IDENTIFIER _ "(" Mixins ")" EXTENDS IDENTIFIER Block
 112) Class : CLASS IDENTIFIER _ "(" Mixins ")" Block

  EXTENDS       shift, and go to state 159
  "("           shift, and go to state 160
  "{"           shift, and go to state 87

  Block         go to state 158

state 96

 113) Class : CLASS Block _

  $default      reduce using rule 113 (Class)


state 97

 114) Class : CLASS EXTENDS _ IDENTIFIER Block

  IDENTIFIER    shift, and go to state 161


state 98

 115) Class : CLASS "(" _ Mixins ")" EXTENDS IDENTIFIER Block
 116) Class : CLASS "(" _ Mixins ")" Block

  WITH          shift, and go to state 163

  Mixins        go to state 162

state 99

 117) Hash : HASH "{" _ NEWLINE KeyVal "}"
 118) Hash : HASH "{" _ KeyVal "}"
 119) Hash : HASH "{" _ KeyVal NEWLINE "}"
 120) Hash : HASH "{" _ NEWLINE KeyVal NEWLINE "}"
 121) Hash : HASH "{" _ "}"

  IDENTIFIER    shift, and go to state 167
  NEWLINE       shift, and go to state 164
  NEWLINE       [reduce using rule 122 (KeyVal)]
  "}"           shift, and go to state 166
  "}"           [reduce using rule 122 (KeyVal)]
  $default      reduce using rule 122 (KeyVal)

  KeyVal        go to state 165

state 100

 125) Mixin : MIXIN IDENTIFIER _ Block
 126) Mixin : MIXIN IDENTIFIER _ Mixins Block

  WITH          shift, and go to state 163
  "{"           shift, and go to state 87

  Block         go to state 168
  Mixins        go to state 169

state 101

 129) Package : PACKAGE Block _

  $default      reduce using rule 129 (Package)


state 102

 130) Package : PACKAGE IDENTIFIER _ Block

  "{"           shift, and go to state 87

  Block         go to state 170

state 103

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 131) If : IF Expression _ Block
 132) If : IF Expression _ Block ElseIfs
 133) If : IF Expression _ Block ELSE Block
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 171

state 104

 137) ForOf : FOR "{" _ IDENTIFIER "," IDENTIFIER "}" OF Expression Block

  IDENTIFIER    shift, and go to state 172


state 105

 138) ForOf : FOR IDENTIFIER _ OF Expression Block

  OF            shift, and go to state 173


state 106

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 139) Unless : UNLESS Expression _ Block
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 174

state 107

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression
 141) While : WHILE Expression _ Block

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 175

state 108


  $default      accept


state 109

   4) Expressions : Expressions Terminator Expression _
  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 4 (Expressions)


state 110

  37) Call : Expression "." IDENTIFIER _ Arguments
  38) Call : Expression "." IDENTIFIER _
  39) Call : Expression "." IDENTIFIER _ IDENTIFIER "." "." "."
  40) Call : Expression "." IDENTIFIER _ "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression "." IDENTIFIER _ "=" Expression
  45) Call : Expression "." IDENTIFIER _ Arguments Block

  IF            shift, and go to state 46
  IF            [reduce using rule 38 (Call)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 38 (Call)]
  WHILE         shift, and go to state 49
  WHILE         [reduce using rule 38 (Call)]
  FOR           shift, and go to state 47
  FOR           [reduce using rule 38 (Call)]
  IMPORT        shift, and go to state 33
  IMPORT        [reduce using rule 38 (Call)]
  CLASS         shift, and go to state 42
  CLASS         [reduce using rule 38 (Call)]
  PRIVATE       shift, and go to state 40
  PRIVATE       [reduce using rule 38 (Call)]
  HASH          shift, and go to state 43
  HASH          [reduce using rule 38 (Call)]
  MIXIN         shift, and go to state 44
  MIXIN         [reduce using rule 38 (Call)]
  PACKAGE       shift, and go to state 45
  PACKAGE       [reduce using rule 38 (Call)]
  DEF           shift, and go to state 39
  DEF           [reduce using rule 38 (Call)]
  INIT          shift, and go to state 41
  INIT          [reduce using rule 38 (Call)]
  ARROW         shift, and go to state 36
  ARROW         [reduce using rule 38 (Call)]
  SLASH         shift, and go to state 35
  SLASH         [reduce using rule 38 (Call)]
  LET           shift, and go to state 38
  LET           [reduce using rule 38 (Call)]
  NUMBER        shift, and go to state 27
  NUMBER        [reduce using rule 38 (Call)]
  STRING        shift, and go to state 28
  STRING        [reduce using rule 38 (Call)]
  TRUE          shift, and go to state 29
  TRUE          [reduce using rule 38 (Call)]
  FALSE         shift, and go to state 30
  FALSE         [reduce using rule 38 (Call)]
  NIL           shift, and go to state 31
  NIL           [reduce using rule 38 (Call)]
  IDENTIFIER    shift, and go to state 177
  IDENTIFIER    [reduce using rule 38 (Call)]
  "not"         shift, and go to state 37
  "not"         [reduce using rule 38 (Call)]
  "="           shift, and go to state 179
  "("           shift, and go to state 176
  "("           [reduce using rule 38 (Call)]
  "["           shift, and go to state 34
  "["           [reduce using rule 38 (Call)]
  $default      reduce using rule 38 (Call)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 75
  Arguments     go to state 178
  ArgList       go to state 77

state 111

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  63) Operator : Expression "or" Expression _
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 63 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 63 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  $default      reduce using rule 63 (Operator)


state 112

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  64) Operator : Expression "and" Expression _
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 64 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 64 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  $default      reduce using rule 64 (Operator)


state 113

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  65) Operator : Expression "is" Expression _
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 65 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 65 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  $default      reduce using rule 65 (Operator)


state 114

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  66) Operator : Expression "@" Expression _
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 66 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 66 (Operator)]
  $default      reduce using rule 66 (Operator)


state 115

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  67) Operator : Expression "set" Expression _ Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 181
  UNLESS        shift, and go to state 182
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "not"         shift, and go to state 37
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 180

state 116

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  68) Operator : Expression "isnt" Expression _
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 68 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 68 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  $default      reduce using rule 68 (Operator)


state 117

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  70) Operator : Expression ">" Expression _
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 70 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 70 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  $default      reduce using rule 70 (Operator)


state 118

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  71) Operator : Expression ">=" Expression _
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 71 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 71 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  $default      reduce using rule 71 (Operator)


state 119

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  72) Operator : Expression "<" Expression _
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 72 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 72 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  $default      reduce using rule 72 (Operator)


state 120

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  73) Operator : Expression "<=" Expression _
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 73 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 73 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  $default      reduce using rule 73 (Operator)


state 121

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  74) Operator : Expression "+" Expression _
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 74 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 74 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  $default      reduce using rule 74 (Operator)


state 122

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  75) Operator : Expression "%" Expression _
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 75 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 75 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  $default      reduce using rule 75 (Operator)


state 123

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  76) Operator : Expression "-" Expression _
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 76 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 76 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  $default      reduce using rule 76 (Operator)


state 124

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  77) Operator : Expression "*" Expression _
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 77 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 77 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  $default      reduce using rule 77 (Operator)


state 125

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  78) Operator : Expression "/" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 78 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 78 (Operator)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  $default      reduce using rule 78 (Operator)


state 126

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 134) If : Expression IF Expression _
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 134 (If)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 134 (If)]
  "."           shift, and go to state 52
  "."           [reduce using rule 134 (If)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 134 (If)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 134 (If)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 134 (If)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 134 (If)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 134 (If)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 134 (If)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 134 (If)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 134 (If)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 134 (If)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 134 (If)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 134 (If)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 134 (If)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 134 (If)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 134 (If)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 134 (If)]
  $default      reduce using rule 134 (If)


state 127

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression
 140) Unless : Expression UNLESS Expression _

  IF            shift, and go to state 68
  IF            [reduce using rule 140 (Unless)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 140 (Unless)]
  "."           shift, and go to state 52
  "."           [reduce using rule 140 (Unless)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 140 (Unless)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 140 (Unless)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 140 (Unless)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 140 (Unless)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 140 (Unless)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 140 (Unless)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 140 (Unless)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 140 (Unless)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 140 (Unless)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 140 (Unless)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 140 (Unless)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 140 (Unless)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 140 (Unless)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 140 (Unless)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 140 (Unless)]
  $default      reduce using rule 140 (Unless)


state 128

  26) Expression : "(" Expression ")" _

  $default      reduce using rule 26 (Expression)


state 129

  27) Expression : "(" Expression NEWLINE _ ")"

  ")"           shift, and go to state 183


state 130

  28) Expression : "(" NEWLINE Expression _ NEWLINE ")"
  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  NEWLINE       shift, and go to state 184
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53


state 131

  26) Expression : "(" Expression _ ")"
  27) Expression : "(" Expression _ NEWLINE ")"
  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  57) ArgList : Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  NEWLINE       shift, and go to state 129
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  ")"           shift, and go to state 128
  ")"           [reduce using rule 57 (ArgList)]
  $default      reduce using rule 57 (ArgList)


state 132

  36) Call : IDENTIFIER _ Arguments
  41) Call : IDENTIFIER _ IDENTIFIER "." "." "."
  42) Call : IDENTIFIER _ "(" IDENTIFIER "." "." "." ")"
  42) Call : IDENTIFIER "(" IDENTIFIER _ "." "." "." ")"
  44) Call : IDENTIFIER _ Arguments Block
  46) Apply : IDENTIFIER _ APPLY Arguments
  47) Apply : IDENTIFIER _ APPLY
  79) GetLocal : IDENTIFIER _
  84) SetLocal : IDENTIFIER _ "=" Expression

  IF            shift, and go to state 46
  IF            [reduce using rule 79 (GetLocal)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 79 (GetLocal)]
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  APPLY         shift, and go to state 76
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 73
  "."           shift, and go to state 185
  "."           [reduce using rule 79 (GetLocal)]
  "not"         shift, and go to state 37
  "="           shift, and go to state 78
  "("           shift, and go to state 72
  "["           shift, and go to state 34
  $default      reduce using rule 79 (GetLocal)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Arguments     go to state 74
  Expression    go to state 75
  ArgList       go to state 77

state 133

  50) Arguments : "(" ")" _

  $default      reduce using rule 50 (Arguments)


state 134

  51) Arguments : "(" ArgList _ ")"
  58) ArgList : ArgList _ "," Expression

  ","           shift, and go to state 139
  ")"           shift, and go to state 186


state 135

  41) Call : IDENTIFIER IDENTIFIER "." _ "." "."

  "."           shift, and go to state 187


state 136

  44) Call : IDENTIFIER Arguments Block _

  $default      reduce using rule 44 (Call)


state 137

  26) Expression : "(" _ Expression ")"
  27) Expression : "(" _ Expression NEWLINE ")"
  28) Expression : "(" _ NEWLINE Expression NEWLINE ")"
  50) Arguments : "(" _ ")"
  51) Arguments : "(" _ ArgList ")"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  NEWLINE       shift, and go to state 71
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  ")"           shift, and go to state 133
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 131
  ArgList       go to state 134

state 138

  46) Apply : IDENTIFIER APPLY Arguments _

  $default      reduce using rule 46 (Apply)


state 139

  58) ArgList : ArgList "," _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 188

state 140

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  84) SetLocal : IDENTIFIER "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 84 (SetLocal)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 84 (SetLocal)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 84 (SetLocal)


state 141

  49) Import : IMPORT IDENTIFIER INTO _ IDENTIFIER

  IDENTIFIER    shift, and go to state 189


state 142

  54) Array : "[" ListArray "]" _

  $default      reduce using rule 54 (Array)


state 143

  56) ListArray : ListArray "," _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 190

state 144

  59) Arrow : SLASH ParamList ARROW _ Expression
  60) Arrow : SLASH ParamList ARROW _ Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34
  "{"           shift, and go to state 87

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 191
  Block         go to state 192

state 145

 108) ParamList : ParamList "," _ IDENTIFIER

  IDENTIFIER    shift, and go to state 193


state 146

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
  85) Block : "{" Expressions _ "}"
  88) Block : "{" Expressions _ NEWLINE "}"

  NEWLINE       shift, and go to state 194
  ";"           shift, and go to state 26
  "}"           shift, and go to state 195

  Terminator    go to state 51

state 147

  29) Terminator : NEWLINE _
  86) Block : "{" NEWLINE _ Expressions "}"
  89) Block : "{" NEWLINE _ Expressions NEWLINE "}"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  NEWLINE       shift, and go to state 25
  NEWLINE       [reduce using rule 29 (Terminator)]
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  ";"           shift, and go to state 26
  ";"           [reduce using rule 29 (Terminator)]
  "["           shift, and go to state 34
  $default      reduce using rule 29 (Terminator)

  Expression    go to state 3
  Expressions   go to state 196
  Terminator    go to state 4
  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23

state 148

  87) Block : "{" "}" _

  $default      reduce using rule 87 (Block)


state 149

  80) SetLocal : LET IDENTIFIER "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 197

state 150

  81) SetLocal : LET VAR IDENTIFIER _ "=" Expression

  "="           shift, and go to state 198


state 151

  83) SetLocal : LET VAR "{" _ ParamList "}" "=" Expression

  IDENTIFIER    shift, and go to state 84
  $default      reduce using rule 106 (ParamList)

  ParamList     go to state 199

state 152

  82) SetLocal : LET "{" ParamList _ "}" "=" Expression
 108) ParamList : ParamList _ "," IDENTIFIER

  ","           shift, and go to state 145
  "}"           shift, and go to state 200


state 153

  90) Def : DEF IDENTIFIER Block _

  $default      reduce using rule 90 (Def)


state 154

  91) Def : DEF IDENTIFIER "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 201

state 155

  92) Def : DEF IDENTIFIER "(" _ ParamList ")" "=" Expression
  93) Def : DEF IDENTIFIER "(" _ ParamList "." "." "." IDENTIFIER ")" "=" Expression
  94) Def : DEF IDENTIFIER "(" _ "." "." "." IDENTIFIER ")" "=" Expression
  95) Def : DEF IDENTIFIER "(" _ ParamList ")" Block
  96) Def : DEF IDENTIFIER "(" _ ParamList "." "." "." IDENTIFIER ")" Block
  97) Def : DEF IDENTIFIER "(" _ "." "." "." IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 84
  "."           shift, and go to state 203
  "."           [reduce using rule 106 (ParamList)]
  $default      reduce using rule 106 (ParamList)

  ParamList     go to state 202

state 156

  98) Def : PRIVATE DEF IDENTIFIER _ "=" Expression
  99) Def : PRIVATE DEF IDENTIFIER _ "(" ParamList ")" "=" Expression
 100) Def : PRIVATE DEF IDENTIFIER _ "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression
 101) Def : PRIVATE DEF IDENTIFIER _ "(" "." "." "." IDENTIFIER ")" "=" Expression
 102) Def : PRIVATE DEF IDENTIFIER _ "(" ParamList ")" Block
 103) Def : PRIVATE DEF IDENTIFIER _ "(" ParamList "." "." "." IDENTIFIER ")" Block
 104) Def : PRIVATE DEF IDENTIFIER _ "(" "." "." "." IDENTIFIER ")" Block

  "="           shift, and go to state 204
  "("           shift, and go to state 205


state 157

 105) Init : INIT "(" ParamList _ ")" Block
 108) ParamList : ParamList _ "," IDENTIFIER

  ","           shift, and go to state 145
  ")"           shift, and go to state 206


state 158

 109) Class : CLASS IDENTIFIER Block _

  $default      reduce using rule 109 (Class)


state 159

 110) Class : CLASS IDENTIFIER EXTENDS _ IDENTIFIER Block

  IDENTIFIER    shift, and go to state 207


state 160

 111) Class : CLASS IDENTIFIER "(" _ Mixins ")" EXTENDS IDENTIFIER Block
 112) Class : CLASS IDENTIFIER "(" _ Mixins ")" Block

  WITH          shift, and go to state 163

  Mixins        go to state 208

state 161

 114) Class : CLASS EXTENDS IDENTIFIER _ Block

  "{"           shift, and go to state 87

  Block         go to state 209

state 162

 115) Class : CLASS "(" Mixins _ ")" EXTENDS IDENTIFIER Block
 116) Class : CLASS "(" Mixins _ ")" Block
 128) Mixins : Mixins _ "," WITH IDENTIFIER

  ","           shift, and go to state 211
  ")"           shift, and go to state 210


state 163

 127) Mixins : WITH _ IDENTIFIER

  IDENTIFIER    shift, and go to state 212


state 164

 117) Hash : HASH "{" NEWLINE _ KeyVal "}"
 120) Hash : HASH "{" NEWLINE _ KeyVal NEWLINE "}"

  IDENTIFIER    shift, and go to state 167
  $default      reduce using rule 122 (KeyVal)

  KeyVal        go to state 213

state 165

 118) Hash : HASH "{" KeyVal _ "}"
 119) Hash : HASH "{" KeyVal _ NEWLINE "}"
 124) KeyVal : KeyVal _ "," IDENTIFIER ROCKET Expression

  NEWLINE       shift, and go to state 215
  ","           shift, and go to state 216
  "}"           shift, and go to state 214


state 166

 121) Hash : HASH "{" "}" _

  $default      reduce using rule 121 (Hash)


state 167

 123) KeyVal : IDENTIFIER _ ROCKET Expression

  ROCKET        shift, and go to state 217


state 168

 125) Mixin : MIXIN IDENTIFIER Block _

  $default      reduce using rule 125 (Mixin)


state 169

 126) Mixin : MIXIN IDENTIFIER Mixins _ Block
 128) Mixins : Mixins _ "," WITH IDENTIFIER

  ","           shift, and go to state 211
  "{"           shift, and go to state 87

  Block         go to state 218

state 170

 130) Package : PACKAGE IDENTIFIER Block _

  $default      reduce using rule 130 (Package)


state 171

 131) If : IF Expression Block _
 132) If : IF Expression Block _ ElseIfs
 133) If : IF Expression Block _ ELSE Block

  ELSE          shift, and go to state 220
  ELSEIF        shift, and go to state 221
  $default      reduce using rule 131 (If)

  ElseIfs       go to state 219

state 172

 137) ForOf : FOR "{" IDENTIFIER _ "," IDENTIFIER "}" OF Expression Block

  ","           shift, and go to state 222


state 173

 138) ForOf : FOR IDENTIFIER OF _ Expression Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 223

state 174

 139) Unless : UNLESS Expression Block _

  $default      reduce using rule 139 (Unless)


state 175

 141) While : WHILE Expression Block _

  $default      reduce using rule 141 (While)


state 176

  26) Expression : "(" _ Expression ")"
  27) Expression : "(" _ Expression NEWLINE ")"
  28) Expression : "(" _ NEWLINE Expression NEWLINE ")"
  40) Call : Expression "." IDENTIFIER "(" _ IDENTIFIER "." "." "." ")"
  50) Arguments : "(" _ ")"
  51) Arguments : "(" _ ArgList ")"

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 224
  NEWLINE       shift, and go to state 71
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  ")"           shift, and go to state 133
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 131
  ArgList       go to state 134

state 177

  36) Call : IDENTIFIER _ Arguments
  39) Call : Expression "." IDENTIFIER IDENTIFIER _ "." "." "."
  41) Call : IDENTIFIER _ IDENTIFIER "." "." "."
  42) Call : IDENTIFIER _ "(" IDENTIFIER "." "." "." ")"
  44) Call : IDENTIFIER _ Arguments Block
  46) Apply : IDENTIFIER _ APPLY Arguments
  47) Apply : IDENTIFIER _ APPLY
  79) GetLocal : IDENTIFIER _
  84) SetLocal : IDENTIFIER _ "=" Expression

  IF            shift, and go to state 46
  IF            [reduce using rule 79 (GetLocal)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 79 (GetLocal)]
  WHILE         shift, and go to state 49
  WHILE         [reduce using rule 79 (GetLocal)]
  FOR           shift, and go to state 47
  FOR           [reduce using rule 79 (GetLocal)]
  IMPORT        shift, and go to state 33
  IMPORT        [reduce using rule 79 (GetLocal)]
  CLASS         shift, and go to state 42
  CLASS         [reduce using rule 79 (GetLocal)]
  PRIVATE       shift, and go to state 40
  PRIVATE       [reduce using rule 79 (GetLocal)]
  HASH          shift, and go to state 43
  HASH          [reduce using rule 79 (GetLocal)]
  MIXIN         shift, and go to state 44
  MIXIN         [reduce using rule 79 (GetLocal)]
  PACKAGE       shift, and go to state 45
  PACKAGE       [reduce using rule 79 (GetLocal)]
  DEF           shift, and go to state 39
  DEF           [reduce using rule 79 (GetLocal)]
  INIT          shift, and go to state 41
  INIT          [reduce using rule 79 (GetLocal)]
  ARROW         shift, and go to state 36
  ARROW         [reduce using rule 79 (GetLocal)]
  SLASH         shift, and go to state 35
  SLASH         [reduce using rule 79 (GetLocal)]
  APPLY         shift, and go to state 76
  LET           shift, and go to state 38
  LET           [reduce using rule 79 (GetLocal)]
  NUMBER        shift, and go to state 27
  NUMBER        [reduce using rule 79 (GetLocal)]
  STRING        shift, and go to state 28
  STRING        [reduce using rule 79 (GetLocal)]
  TRUE          shift, and go to state 29
  TRUE          [reduce using rule 79 (GetLocal)]
  FALSE         shift, and go to state 30
  FALSE         [reduce using rule 79 (GetLocal)]
  NIL           shift, and go to state 31
  NIL           [reduce using rule 79 (GetLocal)]
  IDENTIFIER    shift, and go to state 73
  IDENTIFIER    [reduce using rule 79 (GetLocal)]
  "."           shift, and go to state 225
  "."           [reduce using rule 79 (GetLocal)]
  "not"         shift, and go to state 37
  "not"         [reduce using rule 79 (GetLocal)]
  "="           shift, and go to state 78
  "("           shift, and go to state 72
  "("           [reduce using rule 79 (GetLocal)]
  "["           shift, and go to state 34
  "["           [reduce using rule 79 (GetLocal)]
  $default      reduce using rule 79 (GetLocal)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Arguments     go to state 74
  Expression    go to state 75
  ArgList       go to state 77

state 178

  37) Call : Expression "." IDENTIFIER Arguments _
  45) Call : Expression "." IDENTIFIER Arguments _ Block

  "{"           shift, and go to state 87
  "{"           [reduce using rule 37 (Call)]
  $default      reduce using rule 37 (Call)

  Block         go to state 226

state 179

  43) Call : Expression "." IDENTIFIER "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 227

state 180

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  67) Operator : Expression "set" Expression Expression _
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 67 (Operator)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 67 (Operator)]
  $default      reduce using rule 67 (Operator)


state 181

 131) If : IF _ Expression Block
 132) If : IF _ Expression Block ElseIfs
 133) If : IF _ Expression Block ELSE Block
 134) If : Expression IF _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 228

state 182

 139) Unless : UNLESS _ Expression Block
 140) Unless : Expression UNLESS _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 229

state 183

  27) Expression : "(" Expression NEWLINE ")" _

  $default      reduce using rule 27 (Expression)


state 184

  28) Expression : "(" NEWLINE Expression NEWLINE _ ")"

  ")"           shift, and go to state 230


state 185

  42) Call : IDENTIFIER "(" IDENTIFIER "." _ "." "." ")"

  "."           shift, and go to state 231


state 186

  51) Arguments : "(" ArgList ")" _

  $default      reduce using rule 51 (Arguments)


state 187

  41) Call : IDENTIFIER IDENTIFIER "." "." _ "."

  "."           shift, and go to state 232


state 188

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  58) ArgList : ArgList "," Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 58 (ArgList)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 58 (ArgList)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 58 (ArgList)


state 189

  49) Import : IMPORT IDENTIFIER INTO IDENTIFIER _

  $default      reduce using rule 49 (Import)


state 190

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  56) ListArray : ListArray "," Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 56 (ListArray)


state 191

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  59) Arrow : SLASH ParamList ARROW Expression _
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 59 (Arrow)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 59 (Arrow)]
  "."           shift, and go to state 52
  "."           [reduce using rule 59 (Arrow)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 59 (Arrow)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 59 (Arrow)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 59 (Arrow)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 59 (Arrow)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 59 (Arrow)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 59 (Arrow)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 59 (Arrow)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 59 (Arrow)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 59 (Arrow)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 59 (Arrow)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 59 (Arrow)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 59 (Arrow)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 59 (Arrow)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 59 (Arrow)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 59 (Arrow)]
  $default      reduce using rule 59 (Arrow)


state 192

  60) Arrow : SLASH ParamList ARROW Block _

  $default      reduce using rule 60 (Arrow)


state 193

 108) ParamList : ParamList "," IDENTIFIER _

  $default      reduce using rule 108 (ParamList)


state 194

  29) Terminator : NEWLINE _
  88) Block : "{" Expressions NEWLINE _ "}"

  "}"           shift, and go to state 233
  "}"           [reduce using rule 29 (Terminator)]
  $default      reduce using rule 29 (Terminator)


state 195

  85) Block : "{" Expressions "}" _

  $default      reduce using rule 85 (Block)


state 196

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
  86) Block : "{" NEWLINE Expressions _ "}"
  89) Block : "{" NEWLINE Expressions _ NEWLINE "}"

  NEWLINE       shift, and go to state 234
  ";"           shift, and go to state 26
  "}"           shift, and go to state 235

  Terminator    go to state 51

state 197

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  80) SetLocal : LET IDENTIFIER "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 80 (SetLocal)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 80 (SetLocal)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 80 (SetLocal)


state 198

  81) SetLocal : LET VAR IDENTIFIER "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 236

state 199

  83) SetLocal : LET VAR "{" ParamList _ "}" "=" Expression
 108) ParamList : ParamList _ "," IDENTIFIER

  ","           shift, and go to state 145
  "}"           shift, and go to state 237


state 200

  82) SetLocal : LET "{" ParamList "}" _ "=" Expression

  "="           shift, and go to state 238


state 201

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  91) Def : DEF IDENTIFIER "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 91 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 91 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 91 (Def)


state 202

  92) Def : DEF IDENTIFIER "(" ParamList _ ")" "=" Expression
  93) Def : DEF IDENTIFIER "(" ParamList _ "." "." "." IDENTIFIER ")" "=" Expression
  95) Def : DEF IDENTIFIER "(" ParamList _ ")" Block
  96) Def : DEF IDENTIFIER "(" ParamList _ "." "." "." IDENTIFIER ")" Block
 108) ParamList : ParamList _ "," IDENTIFIER

  "."           shift, and go to state 240
  ","           shift, and go to state 145
  ")"           shift, and go to state 239


state 203

  94) Def : DEF IDENTIFIER "(" "." _ "." "." IDENTIFIER ")" "=" Expression
  97) Def : DEF IDENTIFIER "(" "." _ "." "." IDENTIFIER ")" Block

  "."           shift, and go to state 241


state 204

  98) Def : PRIVATE DEF IDENTIFIER "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 242

state 205

  99) Def : PRIVATE DEF IDENTIFIER "(" _ ParamList ")" "=" Expression
 100) Def : PRIVATE DEF IDENTIFIER "(" _ ParamList "." "." "." IDENTIFIER ")" "=" Expression
 101) Def : PRIVATE DEF IDENTIFIER "(" _ "." "." "." IDENTIFIER ")" "=" Expression
 102) Def : PRIVATE DEF IDENTIFIER "(" _ ParamList ")" Block
 103) Def : PRIVATE DEF IDENTIFIER "(" _ ParamList "." "." "." IDENTIFIER ")" Block
 104) Def : PRIVATE DEF IDENTIFIER "(" _ "." "." "." IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 84
  "."           shift, and go to state 244
  "."           [reduce using rule 106 (ParamList)]
  $default      reduce using rule 106 (ParamList)

  ParamList     go to state 243

state 206

 105) Init : INIT "(" ParamList ")" _ Block

  "{"           shift, and go to state 87

  Block         go to state 245

state 207

 110) Class : CLASS IDENTIFIER EXTENDS IDENTIFIER _ Block

  "{"           shift, and go to state 87

  Block         go to state 246

state 208

 111) Class : CLASS IDENTIFIER "(" Mixins _ ")" EXTENDS IDENTIFIER Block
 112) Class : CLASS IDENTIFIER "(" Mixins _ ")" Block
 128) Mixins : Mixins _ "," WITH IDENTIFIER

  ","           shift, and go to state 211
  ")"           shift, and go to state 247


state 209

 114) Class : CLASS EXTENDS IDENTIFIER Block _

  $default      reduce using rule 114 (Class)


state 210

 115) Class : CLASS "(" Mixins ")" _ EXTENDS IDENTIFIER Block
 116) Class : CLASS "(" Mixins ")" _ Block

  EXTENDS       shift, and go to state 248
  "{"           shift, and go to state 87

  Block         go to state 249

state 211

 128) Mixins : Mixins "," _ WITH IDENTIFIER

  WITH          shift, and go to state 250


state 212

 127) Mixins : WITH IDENTIFIER _

  $default      reduce using rule 127 (Mixins)


state 213

 117) Hash : HASH "{" NEWLINE KeyVal _ "}"
 120) Hash : HASH "{" NEWLINE KeyVal _ NEWLINE "}"
 124) KeyVal : KeyVal _ "," IDENTIFIER ROCKET Expression

  NEWLINE       shift, and go to state 252
  ","           shift, and go to state 216
  "}"           shift, and go to state 251


state 214

 118) Hash : HASH "{" KeyVal "}" _

  $default      reduce using rule 118 (Hash)


state 215

 119) Hash : HASH "{" KeyVal NEWLINE _ "}"

  "}"           shift, and go to state 253


state 216

 124) KeyVal : KeyVal "," _ IDENTIFIER ROCKET Expression

  IDENTIFIER    shift, and go to state 254


state 217

 123) KeyVal : IDENTIFIER ROCKET _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 255

state 218

 126) Mixin : MIXIN IDENTIFIER Mixins Block _

  $default      reduce using rule 126 (Mixin)


state 219

 132) If : IF Expression Block ElseIfs _
 136) ElseIfs : ElseIfs _ ELSEIF Expression Block

  ELSEIF        shift, and go to state 256
  $default      reduce using rule 132 (If)


state 220

 133) If : IF Expression Block ELSE _ Block

  "{"           shift, and go to state 87

  Block         go to state 257

state 221

 135) ElseIfs : ELSEIF _ Expression Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 258

state 222

 137) ForOf : FOR "{" IDENTIFIER "," _ IDENTIFIER "}" OF Expression Block

  IDENTIFIER    shift, and go to state 259


state 223

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 138) ForOf : FOR IDENTIFIER OF Expression _ Block
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 260

state 224

  36) Call : IDENTIFIER _ Arguments
  40) Call : Expression "." IDENTIFIER "(" IDENTIFIER _ "." "." "." ")"
  41) Call : IDENTIFIER _ IDENTIFIER "." "." "."
  42) Call : IDENTIFIER _ "(" IDENTIFIER "." "." "." ")"
  44) Call : IDENTIFIER _ Arguments Block
  46) Apply : IDENTIFIER _ APPLY Arguments
  47) Apply : IDENTIFIER _ APPLY
  79) GetLocal : IDENTIFIER _
  84) SetLocal : IDENTIFIER _ "=" Expression

  IF            shift, and go to state 46
  IF            [reduce using rule 79 (GetLocal)]
  UNLESS        shift, and go to state 48
  UNLESS        [reduce using rule 79 (GetLocal)]
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  APPLY         shift, and go to state 76
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 73
  "."           shift, and go to state 261
  "."           [reduce using rule 79 (GetLocal)]
  "not"         shift, and go to state 37
  "="           shift, and go to state 78
  "("           shift, and go to state 72
  "["           shift, and go to state 34
  $default      reduce using rule 79 (GetLocal)

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Arguments     go to state 74
  Expression    go to state 75
  ArgList       go to state 77

state 225

  39) Call : Expression "." IDENTIFIER IDENTIFIER "." _ "." "."

  "."           shift, and go to state 262


state 226

  45) Call : Expression "." IDENTIFIER Arguments Block _

  $default      reduce using rule 45 (Call)


state 227

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  43) Call : Expression "." IDENTIFIER "=" Expression _
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 43 (Call)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 43 (Call)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 43 (Call)


state 228

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 131) If : IF Expression _ Block
 132) If : IF Expression _ Block ElseIfs
 133) If : IF Expression _ Block ELSE Block
 134) If : Expression _ IF Expression
 134) If : Expression IF Expression _
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 134 (If)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 134 (If)]
  "."           shift, and go to state 52
  "."           [reduce using rule 134 (If)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 134 (If)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 134 (If)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 134 (If)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 134 (If)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 134 (If)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 134 (If)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 134 (If)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 134 (If)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 134 (If)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 134 (If)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 134 (If)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 134 (If)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 134 (If)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 134 (If)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 134 (If)]
  "{"           shift, and go to state 87
  $default      reduce using rule 134 (If)

  Block         go to state 171

state 229

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 139) Unless : UNLESS Expression _ Block
 140) Unless : Expression _ UNLESS Expression
 140) Unless : Expression UNLESS Expression _

  IF            shift, and go to state 68
  IF            [reduce using rule 140 (Unless)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 140 (Unless)]
  "."           shift, and go to state 52
  "."           [reduce using rule 140 (Unless)]
  "@"           shift, and go to state 56
  "@"           [reduce using rule 140 (Unless)]
  "set"         shift, and go to state 57
  "set"         [reduce using rule 140 (Unless)]
  "*"           shift, and go to state 66
  "*"           [reduce using rule 140 (Unless)]
  "/"           shift, and go to state 67
  "/"           [reduce using rule 140 (Unless)]
  "+"           shift, and go to state 63
  "+"           [reduce using rule 140 (Unless)]
  "-"           shift, and go to state 65
  "-"           [reduce using rule 140 (Unless)]
  "%"           shift, and go to state 64
  "%"           [reduce using rule 140 (Unless)]
  ">"           shift, and go to state 59
  ">"           [reduce using rule 140 (Unless)]
  ">="          shift, and go to state 60
  ">="          [reduce using rule 140 (Unless)]
  "<"           shift, and go to state 61
  "<"           [reduce using rule 140 (Unless)]
  "<="          shift, and go to state 62
  "<="          [reduce using rule 140 (Unless)]
  "is"          shift, and go to state 55
  "is"          [reduce using rule 140 (Unless)]
  "isnt"        shift, and go to state 58
  "isnt"        [reduce using rule 140 (Unless)]
  "and"         shift, and go to state 54
  "and"         [reduce using rule 140 (Unless)]
  "or"          shift, and go to state 53
  "or"          [reduce using rule 140 (Unless)]
  "{"           shift, and go to state 87
  $default      reduce using rule 140 (Unless)

  Block         go to state 174

state 230

  28) Expression : "(" NEWLINE Expression NEWLINE ")" _

  $default      reduce using rule 28 (Expression)


state 231

  42) Call : IDENTIFIER "(" IDENTIFIER "." "." _ "." ")"

  "."           shift, and go to state 263


state 232

  41) Call : IDENTIFIER IDENTIFIER "." "." "." _

  $default      reduce using rule 41 (Call)


state 233

  88) Block : "{" Expressions NEWLINE "}" _

  $default      reduce using rule 88 (Block)


state 234

  29) Terminator : NEWLINE _
  89) Block : "{" NEWLINE Expressions NEWLINE _ "}"

  "}"           shift, and go to state 264
  "}"           [reduce using rule 29 (Terminator)]
  $default      reduce using rule 29 (Terminator)


state 235

  86) Block : "{" NEWLINE Expressions "}" _

  $default      reduce using rule 86 (Block)


state 236

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  81) SetLocal : LET VAR IDENTIFIER "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 81 (SetLocal)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 81 (SetLocal)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 81 (SetLocal)


state 237

  83) SetLocal : LET VAR "{" ParamList "}" _ "=" Expression

  "="           shift, and go to state 265


state 238

  82) SetLocal : LET "{" ParamList "}" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 266

state 239

  92) Def : DEF IDENTIFIER "(" ParamList ")" _ "=" Expression
  95) Def : DEF IDENTIFIER "(" ParamList ")" _ Block

  "="           shift, and go to state 267
  "{"           shift, and go to state 87

  Block         go to state 268

state 240

  93) Def : DEF IDENTIFIER "(" ParamList "." _ "." "." IDENTIFIER ")" "=" Expression
  96) Def : DEF IDENTIFIER "(" ParamList "." _ "." "." IDENTIFIER ")" Block

  "."           shift, and go to state 269


state 241

  94) Def : DEF IDENTIFIER "(" "." "." _ "." IDENTIFIER ")" "=" Expression
  97) Def : DEF IDENTIFIER "(" "." "." _ "." IDENTIFIER ")" Block

  "."           shift, and go to state 270


state 242

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  98) Def : PRIVATE DEF IDENTIFIER "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 98 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 98 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 98 (Def)


state 243

  99) Def : PRIVATE DEF IDENTIFIER "(" ParamList _ ")" "=" Expression
 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList _ "." "." "." IDENTIFIER ")" "=" Expression
 102) Def : PRIVATE DEF IDENTIFIER "(" ParamList _ ")" Block
 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList _ "." "." "." IDENTIFIER ")" Block
 108) ParamList : ParamList _ "," IDENTIFIER

  "."           shift, and go to state 272
  ","           shift, and go to state 145
  ")"           shift, and go to state 271


state 244

 101) Def : PRIVATE DEF IDENTIFIER "(" "." _ "." "." IDENTIFIER ")" "=" Expression
 104) Def : PRIVATE DEF IDENTIFIER "(" "." _ "." "." IDENTIFIER ")" Block

  "."           shift, and go to state 273


state 245

 105) Init : INIT "(" ParamList ")" Block _

  $default      reduce using rule 105 (Init)


state 246

 110) Class : CLASS IDENTIFIER EXTENDS IDENTIFIER Block _

  $default      reduce using rule 110 (Class)


state 247

 111) Class : CLASS IDENTIFIER "(" Mixins ")" _ EXTENDS IDENTIFIER Block
 112) Class : CLASS IDENTIFIER "(" Mixins ")" _ Block

  EXTENDS       shift, and go to state 274
  "{"           shift, and go to state 87

  Block         go to state 275

state 248

 115) Class : CLASS "(" Mixins ")" EXTENDS _ IDENTIFIER Block

  IDENTIFIER    shift, and go to state 276


state 249

 116) Class : CLASS "(" Mixins ")" Block _

  $default      reduce using rule 116 (Class)


state 250

 128) Mixins : Mixins "," WITH _ IDENTIFIER

  IDENTIFIER    shift, and go to state 277


state 251

 117) Hash : HASH "{" NEWLINE KeyVal "}" _

  $default      reduce using rule 117 (Hash)


state 252

 120) Hash : HASH "{" NEWLINE KeyVal NEWLINE _ "}"

  "}"           shift, and go to state 278


state 253

 119) Hash : HASH "{" KeyVal NEWLINE "}" _

  $default      reduce using rule 119 (Hash)


state 254

 124) KeyVal : KeyVal "," IDENTIFIER _ ROCKET Expression

  ROCKET        shift, and go to state 279


state 255

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 123) KeyVal : IDENTIFIER ROCKET Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 123 (KeyVal)


state 256

 136) ElseIfs : ElseIfs ELSEIF _ Expression Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 280

state 257

 133) If : IF Expression Block ELSE Block _

  $default      reduce using rule 133 (If)


state 258

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 135) ElseIfs : ELSEIF Expression _ Block
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 281

state 259

 137) ForOf : FOR "{" IDENTIFIER "," IDENTIFIER _ "}" OF Expression Block

  "}"           shift, and go to state 282


state 260

 138) ForOf : FOR IDENTIFIER OF Expression Block _

  $default      reduce using rule 138 (ForOf)


state 261

  40) Call : Expression "." IDENTIFIER "(" IDENTIFIER "." _ "." "." ")"

  "."           shift, and go to state 283


state 262

  39) Call : Expression "." IDENTIFIER IDENTIFIER "." "." _ "."

  "."           shift, and go to state 284


state 263

  42) Call : IDENTIFIER "(" IDENTIFIER "." "." "." _ ")"

  ")"           shift, and go to state 285


state 264

  89) Block : "{" NEWLINE Expressions NEWLINE "}" _

  $default      reduce using rule 89 (Block)


state 265

  83) SetLocal : LET VAR "{" ParamList "}" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 286

state 266

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  82) SetLocal : LET "{" ParamList "}" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 82 (SetLocal)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 82 (SetLocal)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 82 (SetLocal)


state 267

  92) Def : DEF IDENTIFIER "(" ParamList ")" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 287

state 268

  95) Def : DEF IDENTIFIER "(" ParamList ")" Block _

  $default      reduce using rule 95 (Def)


state 269

  93) Def : DEF IDENTIFIER "(" ParamList "." "." _ "." IDENTIFIER ")" "=" Expression
  96) Def : DEF IDENTIFIER "(" ParamList "." "." _ "." IDENTIFIER ")" Block

  "."           shift, and go to state 288


state 270

  94) Def : DEF IDENTIFIER "(" "." "." "." _ IDENTIFIER ")" "=" Expression
  97) Def : DEF IDENTIFIER "(" "." "." "." _ IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 289


state 271

  99) Def : PRIVATE DEF IDENTIFIER "(" ParamList ")" _ "=" Expression
 102) Def : PRIVATE DEF IDENTIFIER "(" ParamList ")" _ Block

  "="           shift, and go to state 290
  "{"           shift, and go to state 87

  Block         go to state 291

state 272

 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." _ "." "." IDENTIFIER ")" "=" Expression
 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." _ "." "." IDENTIFIER ")" Block

  "."           shift, and go to state 292


state 273

 101) Def : PRIVATE DEF IDENTIFIER "(" "." "." _ "." IDENTIFIER ")" "=" Expression
 104) Def : PRIVATE DEF IDENTIFIER "(" "." "." _ "." IDENTIFIER ")" Block

  "."           shift, and go to state 293


state 274

 111) Class : CLASS IDENTIFIER "(" Mixins ")" EXTENDS _ IDENTIFIER Block

  IDENTIFIER    shift, and go to state 294


state 275

 112) Class : CLASS IDENTIFIER "(" Mixins ")" Block _

  $default      reduce using rule 112 (Class)


state 276

 115) Class : CLASS "(" Mixins ")" EXTENDS IDENTIFIER _ Block

  "{"           shift, and go to state 87

  Block         go to state 295

state 277

 128) Mixins : Mixins "," WITH IDENTIFIER _

  $default      reduce using rule 128 (Mixins)


state 278

 120) Hash : HASH "{" NEWLINE KeyVal NEWLINE "}" _

  $default      reduce using rule 120 (Hash)


state 279

 124) KeyVal : KeyVal "," IDENTIFIER ROCKET _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 296

state 280

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 136) ElseIfs : ElseIfs ELSEIF Expression _ Block
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 297

state 281

 135) ElseIfs : ELSEIF Expression Block _

  $default      reduce using rule 135 (ElseIfs)


state 282

 137) ForOf : FOR "{" IDENTIFIER "," IDENTIFIER "}" _ OF Expression Block

  OF            shift, and go to state 298


state 283

  40) Call : Expression "." IDENTIFIER "(" IDENTIFIER "." "." _ "." ")"

  "."           shift, and go to state 299


state 284

  39) Call : Expression "." IDENTIFIER IDENTIFIER "." "." "." _

  $default      reduce using rule 39 (Call)


state 285

  42) Call : IDENTIFIER "(" IDENTIFIER "." "." "." ")" _

  $default      reduce using rule 42 (Call)


state 286

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  83) SetLocal : LET VAR "{" ParamList "}" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 83 (SetLocal)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 83 (SetLocal)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 83 (SetLocal)


state 287

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  92) Def : DEF IDENTIFIER "(" ParamList ")" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 92 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 92 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 92 (Def)


state 288

  93) Def : DEF IDENTIFIER "(" ParamList "." "." "." _ IDENTIFIER ")" "=" Expression
  96) Def : DEF IDENTIFIER "(" ParamList "." "." "." _ IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 300


state 289

  94) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER _ ")" "=" Expression
  97) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER _ ")" Block

  ")"           shift, and go to state 301


state 290

  99) Def : PRIVATE DEF IDENTIFIER "(" ParamList ")" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 302

state 291

 102) Def : PRIVATE DEF IDENTIFIER "(" ParamList ")" Block _

  $default      reduce using rule 102 (Def)


state 292

 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." _ "." IDENTIFIER ")" "=" Expression
 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." _ "." IDENTIFIER ")" Block

  "."           shift, and go to state 303


state 293

 101) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." _ IDENTIFIER ")" "=" Expression
 104) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." _ IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 304


state 294

 111) Class : CLASS IDENTIFIER "(" Mixins ")" EXTENDS IDENTIFIER _ Block

  "{"           shift, and go to state 87

  Block         go to state 305

state 295

 115) Class : CLASS "(" Mixins ")" EXTENDS IDENTIFIER Block _

  $default      reduce using rule 115 (Class)


state 296

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 124) KeyVal : KeyVal "," IDENTIFIER ROCKET Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 124 (KeyVal)


state 297

 136) ElseIfs : ElseIfs ELSEIF Expression Block _

  $default      reduce using rule 136 (ElseIfs)


state 298

 137) ForOf : FOR "{" IDENTIFIER "," IDENTIFIER "}" OF _ Expression Block

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 306

state 299

  40) Call : Expression "." IDENTIFIER "(" IDENTIFIER "." "." "." _ ")"

  ")"           shift, and go to state 307


state 300

  93) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER _ ")" "=" Expression
  96) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER _ ")" Block

  ")"           shift, and go to state 308


state 301

  94) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" _ "=" Expression
  97) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" _ Block

  "="           shift, and go to state 309
  "{"           shift, and go to state 87

  Block         go to state 310

state 302

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  99) Def : PRIVATE DEF IDENTIFIER "(" ParamList ")" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 99 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 99 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 99 (Def)


state 303

 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." _ IDENTIFIER ")" "=" Expression
 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." _ IDENTIFIER ")" Block

  IDENTIFIER    shift, and go to state 311


state 304

 101) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER _ ")" "=" Expression
 104) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER _ ")" Block

  ")"           shift, and go to state 312


state 305

 111) Class : CLASS IDENTIFIER "(" Mixins ")" EXTENDS IDENTIFIER Block _

  $default      reduce using rule 111 (Class)


state 306

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 134) If : Expression _ IF Expression
 137) ForOf : FOR "{" IDENTIFIER "," IDENTIFIER "}" OF Expression _ Block
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  UNLESS        shift, and go to state 69
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  "{"           shift, and go to state 87

  Block         go to state 313

state 307

  40) Call : Expression "." IDENTIFIER "(" IDENTIFIER "." "." "." ")" _

  $default      reduce using rule 40 (Call)


state 308

  93) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" _ "=" Expression
  96) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" _ Block

  "="           shift, and go to state 314
  "{"           shift, and go to state 87

  Block         go to state 315

state 309

  94) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 316

state 310

  97) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block _

  $default      reduce using rule 97 (Def)


state 311

 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER _ ")" "=" Expression
 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER _ ")" Block

  ")"           shift, and go to state 317


state 312

 101) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" _ "=" Expression
 104) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" _ Block

  "="           shift, and go to state 318
  "{"           shift, and go to state 87

  Block         go to state 319

state 313

 137) ForOf : FOR "{" IDENTIFIER "," IDENTIFIER "}" OF Expression Block _

  $default      reduce using rule 137 (ForOf)


state 314

  93) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 320

state 315

  96) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block _

  $default      reduce using rule 96 (Def)


state 316

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  94) Def : DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 94 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 94 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 94 (Def)


state 317

 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" _ "=" Expression
 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" _ Block

  "="           shift, and go to state 321
  "{"           shift, and go to state 87

  Block         go to state 322

state 318

 101) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 323

state 319

 104) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" Block _

  $default      reduce using rule 104 (Def)


state 320

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
  93) Def : DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 93 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 93 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 93 (Def)


state 321

 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" _ Expression

  IF            shift, and go to state 46
  UNLESS        shift, and go to state 48
  WHILE         shift, and go to state 49
  FOR           shift, and go to state 47
  IMPORT        shift, and go to state 33
  CLASS         shift, and go to state 42
  PRIVATE       shift, and go to state 40
  HASH          shift, and go to state 43
  MIXIN         shift, and go to state 44
  PACKAGE       shift, and go to state 45
  DEF           shift, and go to state 39
  INIT          shift, and go to state 41
  ARROW         shift, and go to state 36
  SLASH         shift, and go to state 35
  LET           shift, and go to state 38
  NUMBER        shift, and go to state 27
  STRING        shift, and go to state 28
  TRUE          shift, and go to state 29
  FALSE         shift, and go to state 30
  NIL           shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  "not"         shift, and go to state 37
  "("           shift, and go to state 24
  "["           shift, and go to state 34

  Literal       go to state 5
  Call          go to state 6
  ForOf         go to state 7
  Import        go to state 8
  Apply         go to state 9
  Operator      go to state 10
  GetLocal      go to state 11
  SetLocal      go to state 12
  Arrow         go to state 13
  Def           go to state 14
  Init          go to state 15
  Class         go to state 16
  Hash          go to state 17
  Mixin         go to state 18
  Package       go to state 19
  If            go to state 20
  While         go to state 21
  Unless        go to state 22
  Array         go to state 23
  Expression    go to state 324

state 322

 103) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" Block _

  $default      reduce using rule 103 (Def)


state 323

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 101) Def : PRIVATE DEF IDENTIFIER "(" "." "." "." IDENTIFIER ")" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 101 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 101 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 101 (Def)


state 324

  37) Call : Expression _ "." IDENTIFIER Arguments
  38) Call : Expression _ "." IDENTIFIER
  39) Call : Expression _ "." IDENTIFIER IDENTIFIER "." "." "."
  40) Call : Expression _ "." IDENTIFIER "(" IDENTIFIER "." "." "." ")"
  43) Call : Expression _ "." IDENTIFIER "=" Expression
  45) Call : Expression _ "." IDENTIFIER Arguments Block
  63) Operator : Expression _ "or" Expression
  64) Operator : Expression _ "and" Expression
  65) Operator : Expression _ "is" Expression
  66) Operator : Expression _ "@" Expression
  67) Operator : Expression _ "set" Expression Expression
  68) Operator : Expression _ "isnt" Expression
  70) Operator : Expression _ ">" Expression
  71) Operator : Expression _ ">=" Expression
  72) Operator : Expression _ "<" Expression
  73) Operator : Expression _ "<=" Expression
  74) Operator : Expression _ "+" Expression
  75) Operator : Expression _ "%" Expression
  76) Operator : Expression _ "-" Expression
  77) Operator : Expression _ "*" Expression
  78) Operator : Expression _ "/" Expression
 100) Def : PRIVATE DEF IDENTIFIER "(" ParamList "." "." "." IDENTIFIER ")" "=" Expression _
 134) If : Expression _ IF Expression
 140) Unless : Expression _ UNLESS Expression

  IF            shift, and go to state 68
  IF            [reduce using rule 100 (Def)]
  UNLESS        shift, and go to state 69
  UNLESS        [reduce using rule 100 (Def)]
  "."           shift, and go to state 52
  "@"           shift, and go to state 56
  "set"         shift, and go to state 57
  "*"           shift, and go to state 66
  "/"           shift, and go to state 67
  "+"           shift, and go to state 63
  "-"           shift, and go to state 65
  "%"           shift, and go to state 64
  ">"           shift, and go to state 59
  ">="          shift, and go to state 60
  "<"           shift, and go to state 61
  "<="          shift, and go to state 62
  "is"          shift, and go to state 55
  "isnt"        shift, and go to state 58
  "and"         shift, and go to state 54
  "or"          shift, and go to state 53
  $default      reduce using rule 100 (Def)

