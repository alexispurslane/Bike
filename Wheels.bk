package {
  package Math {
    def Pi = 3.141592653589793
    def E  = 2.718281828459045
  }
  def each (f, a) {
    for x of a {
      f $ x
    }
    a
  }
  def map (f, a, res) {
    if a isnt [] {
      println a @ 0
      map f, a - a @ 0, res + [f $ (a @ 0)]
    } else {
      res
    }
  }
  def filter (f, a) {
    let var res = []
    for x of a {
      if f $ x {
        res = res + [x]
      }
    }
    res
  }
  def reject (f, a) {
    let var res = []
    for x of a {
      if not f $ x {
        res = res + [x]
      }
    }
    res
  }
  def Set = class {
    let var set = []
    init (array) {
      for e of (array.uniq) {
        if e isnt nil {
          set = set + [e]
        }
      }
    }

    def array = set
    def array= (new_array) {
      let new_set = new_array.uniq
      self.new new_set
    }
  }
}
